{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "codeblock",
  "type": "registry:component",
  "title": "Codeblock",
  "description": "Codeblock with syntax highlighting, copy button",
  "dependencies": [
    "react-syntax-highlighter"
  ],
  "devDependencies": [
    "@types/react-syntax-highlighter"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "path": "registry/codeblock/codeblock.tsx",
      "content": "'use client';\n\nimport { Check, Copy } from 'lucide-react';\nimport { useTheme } from 'next-themes';\nimport { type ComponentProps, useState } from 'react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport {\n  vs,\n  vscDarkPlus,\n} from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport { Button } from '@/components/ui/button';\n\ntype SyntaxHighlighterProps = ComponentProps<typeof SyntaxHighlighter>;\ntype PropsWithoutKeys<T, K extends keyof T> = {\n  [P in keyof T as P extends K ? never : P]: T[P];\n};\nexport type CodeBlockProps = {\n  /** 表示するコード */\n  code: string;\n  /** シンタックスハイライト対象の言語 */\n  language: string;\n  /** (任意) コードブロック上部に表示するファイル名 */\n  fileName?: string;\n} & PropsWithoutKeys<SyntaxHighlighterProps, 'children'>;\n\nexport const CodeBlock = ({\n  code,\n  language,\n  fileName,\n  style,\n  customStyle,\n  codeTagProps,\n  ...props\n}: CodeBlockProps) => {\n  const { theme } = useTheme();\n  const [isCopied, setIsCopied] = useState(false);\n\n  const handleCopy = () => {\n    navigator.clipboard.writeText(code);\n    setIsCopied(true);\n    setTimeout(() => {\n      setIsCopied(false);\n    }, 2000);\n  };\n\n  return (\n    <div className=\"relative w-full text-sm border rounded-lg bg-zinc-950 dark:bg-zinc-900\">\n      {fileName && (\n        <div className=\"flex items-center justify-between px-4 py-2 border-b\">\n          <p className=\"text-xs text-zinc-400\">{fileName}</p>\n        </div>\n      )}\n      <div className=\"relative group\">\n        <SyntaxHighlighter\n          language={language}\n          style={style ?? (theme === 'dark' ? vscDarkPlus : vs)}\n          customStyle={{\n            padding: '16px',\n            backgroundColor: 'transparent',\n            margin: 0,\n            fontSize: '14px',\n            lineHeight: '1.5',\n            ...customStyle,\n          }}\n          codeTagProps={{\n            className: 'font-mono',\n            ...codeTagProps,\n          }}\n          {...props}\n        >\n          {code.trim()}\n        </SyntaxHighlighter>\n\n        <Button\n          size=\"icon\"\n          variant=\"ghost\"\n          className=\"absolute top-2 right-2 h-7 w-7 opacity-0 group-hover:opacity-100 transition-opacity\"\n          onClick={handleCopy}\n          aria-label=\"Copy code\"\n        >\n          {isCopied ? (\n            <Check size={16} className=\"text-green-500\" />\n          ) : (\n            <Copy size={16} className=\"text-zinc-400\" />\n          )}\n        </Button>\n      </div>\n    </div>\n  );\n};\n",
      "type": "registry:component"
    }
  ]
}